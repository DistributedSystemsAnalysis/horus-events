// automatically generated by the FlatBuffers compiler, do not modify

package pt.haslab.horus.events.flatbuffers.generated;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class SocketSend extends Table {
  public static SocketSend getRootAsSocketSend(ByteBuffer _bb) { return getRootAsSocketSend(_bb, new SocketSend()); }
  public static SocketSend getRootAsSocketSend(ByteBuffer _bb, SocketSend obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public SocketSend __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long size() { int o = __offset(4); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }

  public static int createSocketSend(FlatBufferBuilder builder,
      long size) {
    builder.startObject(1);
    SocketSend.addSize(builder, size);
    return SocketSend.endSocketSend(builder);
  }

  public static void startSocketSend(FlatBufferBuilder builder) { builder.startObject(1); }
  public static void addSize(FlatBufferBuilder builder, long size) { builder.addInt(0, (int)size, (int)0L); }
  public static int endSocketSend(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

