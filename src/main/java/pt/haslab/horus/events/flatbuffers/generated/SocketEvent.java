// automatically generated by the FlatBuffers compiler, do not modify

package pt.haslab.horus.events.flatbuffers.generated;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class SocketEvent extends Table {
  public static SocketEvent getRootAsSocketEvent(ByteBuffer _bb) { return getRootAsSocketEvent(_bb, new SocketEvent()); }
  public static SocketEvent getRootAsSocketEvent(ByteBuffer _bb, SocketEvent obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public SocketEvent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int sourcePort() { int o = __offset(4); return o != 0 ? bb.getShort(o + bb_pos) & 0xFFFF : 0; }
  public int destinationPort() { int o = __offset(6); return o != 0 ? bb.getShort(o + bb_pos) & 0xFFFF : 0; }
  public int socketFamily() { int o = __offset(8); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int socketType() { int o = __offset(10); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public String socketFrom() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer socketFromAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer socketFromInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }
  public String socketTo() { int o = __offset(14); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer socketToAsByteBuffer() { return __vector_as_bytebuffer(14, 1); }
  public ByteBuffer socketToInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 14, 1); }
  public String socketId() { int o = __offset(16); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer socketIdAsByteBuffer() { return __vector_as_bytebuffer(16, 1); }
  public ByteBuffer socketIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 16, 1); }
  public byte eventType() { int o = __offset(18); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public Table event(Table obj) { int o = __offset(20); return o != 0 ? __union(obj, o) : null; }

  public static int createSocketEvent(FlatBufferBuilder builder,
      int source_port,
      int destination_port,
      int socket_family,
      int socket_type,
      int socket_fromOffset,
      int socket_toOffset,
      int socket_idOffset,
      byte event_type,
      int eventOffset) {
    builder.startObject(9);
    SocketEvent.addEvent(builder, eventOffset);
    SocketEvent.addSocketId(builder, socket_idOffset);
    SocketEvent.addSocketTo(builder, socket_toOffset);
    SocketEvent.addSocketFrom(builder, socket_fromOffset);
    SocketEvent.addSocketType(builder, socket_type);
    SocketEvent.addSocketFamily(builder, socket_family);
    SocketEvent.addDestinationPort(builder, destination_port);
    SocketEvent.addSourcePort(builder, source_port);
    SocketEvent.addEventType(builder, event_type);
    return SocketEvent.endSocketEvent(builder);
  }

  public static void startSocketEvent(FlatBufferBuilder builder) { builder.startObject(9); }
  public static void addSourcePort(FlatBufferBuilder builder, int sourcePort) { builder.addShort(0, (short)sourcePort, (short)0); }
  public static void addDestinationPort(FlatBufferBuilder builder, int destinationPort) { builder.addShort(1, (short)destinationPort, (short)0); }
  public static void addSocketFamily(FlatBufferBuilder builder, int socketFamily) { builder.addInt(2, socketFamily, 0); }
  public static void addSocketType(FlatBufferBuilder builder, int socketType) { builder.addInt(3, socketType, 0); }
  public static void addSocketFrom(FlatBufferBuilder builder, int socketFromOffset) { builder.addOffset(4, socketFromOffset, 0); }
  public static void addSocketTo(FlatBufferBuilder builder, int socketToOffset) { builder.addOffset(5, socketToOffset, 0); }
  public static void addSocketId(FlatBufferBuilder builder, int socketIdOffset) { builder.addOffset(6, socketIdOffset, 0); }
  public static void addEventType(FlatBufferBuilder builder, byte eventType) { builder.addByte(7, eventType, 0); }
  public static void addEvent(FlatBufferBuilder builder, int eventOffset) { builder.addOffset(8, eventOffset, 0); }
  public static int endSocketEvent(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

