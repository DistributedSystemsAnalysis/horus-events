// automatically generated by the FlatBuffers compiler, do not modify

package pt.haslab.horus.events.flatbuffers.generated;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class ProcessCreate extends Table {
  public static ProcessCreate getRootAsProcessCreate(ByteBuffer _bb) { return getRootAsProcessCreate(_bb, new ProcessCreate()); }
  public static ProcessCreate getRootAsProcessCreate(ByteBuffer _bb, ProcessCreate obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public ProcessCreate __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long childPid() { int o = __offset(4); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }

  public static int createProcessCreate(FlatBufferBuilder builder,
      long child_pid) {
    builder.startObject(1);
    ProcessCreate.addChildPid(builder, child_pid);
    return ProcessCreate.endProcessCreate(builder);
  }

  public static void startProcessCreate(FlatBufferBuilder builder) { builder.startObject(1); }
  public static void addChildPid(FlatBufferBuilder builder, long childPid) { builder.addInt(0, (int)childPid, (int)0L); }
  public static int endProcessCreate(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

